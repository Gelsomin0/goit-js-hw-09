{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAM,CACRC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,mBAC/BE,MAAOH,SAASC,cAAc,kBAC9BG,KAAMJ,SAASC,cAAc,kBAG7BI,EAAY,EACZC,EAAe,EACfC,EAAa,EAEjBT,EAAIC,KAAKS,iBAAiB,UAE1B,SAA4BC,GACxBA,EAAEC,iBACF,IAAMC,EAAaC,OAAOd,EAAIM,KAAKS,OAC7BC,EAAaF,OAAOd,EAAIK,MAAMU,OACpCP,EAAeM,OAAOd,EAAII,OAAOW,OAEjC,IAAIE,EAAUC,YAAW,SAASC,IAC9B,GAAIZ,GAAaC,EAKb,OAJAD,EAAY,EACZC,EAAe,EACfC,EAAa,OACbW,aAAaH,GAyBzB,IAAuBI,EAAUhB,GAAVgB,EAdDd,EAcWF,EApBrBI,GADe,IAAfA,EACcO,EAEAH,EAmBN,IAAIS,SAAQ,SAACC,EAASC,GACZC,KAAKC,SAAW,GAElCH,EAAQ,CAACF,WAAUhB,UAEnBmB,EAAO,CAACH,WAAUhB,S,KAnBjBsB,MAAK,SAAAC,G,IAAEP,EAAQO,EAARP,SAAUhB,EAAKuB,EAALvB,MACdwB,QAAQC,IAAI,uBAAwCC,OAAfV,EAAS,QAAYU,OAAN1B,EAAM,QAC1D2B,EAAAlC,GAASmC,OAAOC,QAAQ,qBAAqCH,OAAhBxB,EAAU,QAAiBwB,OAAXtB,EAAW,O,IACzE0B,OAAM,SAAAP,G,IAAEP,EAAQO,EAARP,SAAUhB,EAAKuB,EAALvB,MACjBwB,QAAQC,IAAI,sBAAqCC,OAAfV,EAAS,QAAYU,OAAN1B,EAAM,QACvD2B,EAAAlC,GAASmC,OAAOG,QAAQ,oBAAoCL,OAAhBxB,EAAU,QAAiBwB,OAAXtB,EAAW,O,IAG/EQ,EAAUC,WAAWC,EAAMN,GAC3BN,GAAa,C,GACdS,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst ell = {\n    form: document.querySelector(\".form\"),\n    amount: document.querySelector(\"[name='amount']\"),\n    delay: document.querySelector(\"[name='delay']\"),\n    step: document.querySelector(\"[name='step']\"),\n}\n\nlet stepCount = 1;\nlet currentCount = 0;\nlet delayCount = 0;\n\nell.form.addEventListener('submit', submitFormFunction);\n\nfunction submitFormFunction(e) {\n    e.preventDefault();\n    const stepNumber = Number(ell.step.value);\n    const firstDelay = Number(ell.delay.value);\n    currentCount = Number(ell.amount.value);\n   \n    let timerId = setTimeout(function tick() {\n        if (stepCount >= currentCount) {\n            stepCount = 1;\n            currentCount = 0;\n            delayCount = 0;\n            clearTimeout(timerId);\n            return;\n        }\n\n        if (delayCount === 0) {\n            delayCount += firstDelay;    \n        } else {\n            delayCount += stepNumber;\n        }\n        \n        \n        createPromise(stepCount, delayCount)\n            .then(({position, delay}) => {\n                console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n                Notiflix.Notify.success(`Fulfilled promise ${stepCount} in ${delayCount} ms`);\n            }).catch(({position, delay}) => {\n                console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n                Notiflix.Notify.failure(`Rejected promise ${stepCount} in ${delayCount} ms`);\n            });\n\n        timerId = setTimeout(tick, stepNumber);\n        stepCount += 1;\n    }, firstDelay);\n};\n\nfunction createPromise(position, delay) {\n    const promise = new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n            resolve({position, delay});\n        } else {\n            reject({position, delay});\n        } \n    });\n\n    return promise;\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$ell","form","document","querySelector","amount","delay","step","$ce04d3a99e08e73b$var$stepCount","$ce04d3a99e08e73b$var$currentCount","$ce04d3a99e08e73b$var$delayCount","addEventListener","e","preventDefault","stepNumber","Number","value","firstDelay","timerId","setTimeout","tick","clearTimeout","position","Promise","resolve","reject","Math","random","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.bbd78f0a.js.map"}